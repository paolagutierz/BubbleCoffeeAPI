/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Producto;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-05-04T03:17:15.009Z")

@Validated
@Api(value = "productos", description = "the productos API")
@RequestMapping(value = "/v2")
public interface ProductosApi {

    @ApiOperation(value = "Buscar productos por categoria", nickname = "findProductByCategory", notes = "Se puede agregar categoria separando los string con comas", response = Producto.class, responseContainer = "List", tags={ "Producto", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "operacion exitosa", response = Producto.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "no valido") })
    @RequestMapping(value = "/productos/findByCategory",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Producto>> findProductByCategory(@NotNull @ApiParam(value = "Ver productos por categoria", required = true, allowableValues = "cafes, bebidas, panaderia") @Valid @RequestParam(value = "category", required = true) List<String> category);


    @ApiOperation(value = "Obtener todos los productos", nickname = "getProducts", notes = "Retorna todos los productos", response = Producto.class, tags={ "Producto", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "operacion exitosa", response = Producto.class),
        @ApiResponse(code = 400, message = "id no valido"),
        @ApiResponse(code = 404, message = "producto no encontrado") })
    @RequestMapping(value = "/productos",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Producto> getProducts();

}

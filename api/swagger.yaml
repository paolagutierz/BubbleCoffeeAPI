---
swagger: "2.0"
info:
  description: "This is a Coffee Shop API"
  version: "2.0.0"
  title: "Bubble Coffee"
  contact:
    email: "paolagutgil-29@hotmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "BubbleCoffee.swagger.io"
basePath: "/v2"
schemes:
- "https"
- "http"
paths:
  /menu:
    post:
      tags:
      - "Menu"
      summary: "Agregar nuevo producto al Menu"
      description: "AÃ±adir producto al menu por medio de formulario"
      operationId: "createProductWithForm"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "Nombre"
        in: "formData"
        description: "  Introduce el nombre del producto"
        required: false
        type: "string"
      - name: "Categoria"
        in: "formData"
        description: "Elige la categoria del producto"
        required: false
        type: "array"
        items:
          type: "string"
          default: "Cafes"
          enum:
          - "Cafes"
          - "Bebidas"
          - "Panaderia"
        collectionFormat: "multi"
      - name: "Descripcion"
        in: "formData"
        description: "Introduce la descripcion del producto"
        required: false
        type: "string"
      - name: "Precio"
        in: "formData"
        description: "Introduce el  precio del producto"
        required: false
        type: "string"
      - name: "Imagen"
        in: "formData"
        description: "Imagen del producto"
        required: false
        type: "file"
      security:
      - coffeeshop_auth:
        - "write:products"
        - "read:products"
      responses:
        "200":
          description: "operacion exitosa"
        "405":
          description: "Entrada no valida"
      x-swagger-router-controller: "Menu"
  /menu/findByCategory:
    get:
      tags:
      - "Menu"
      summary: "Buscar producto por categoria"
      description: "Se puede agregar categoria separando los string con comas"
      operationId: "findProductByCategory"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "category"
        in: "query"
        description: "Ver productos por categoria"
        required: true
        type: "array"
        items:
          type: "string"
          default: "cafes"
          enum:
          - "cafes"
          - "bebidas"
          - "panaderia"
        collectionFormat: "multi"
      security:
      - coffeeshop_auth:
        - "write:products"
        - "read:products"
      responses:
        "200":
          description: "operacion exitosa"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Menu"
        "400":
          description: "no valido"
      x-swagger-router-controller: "Menu"
  /menu/{productId}:
    get:
      tags:
      - "Menu"
      summary: "Buscar producto por ID"
      description: "Retorna un solo producto"
      operationId: "getProductById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "Introduce el ID del producto"
        required: true
        type: "integer"
        format: "int64"
      security:
      - api_key: []
      responses:
        "200":
          description: "operacion exitosa"
          schema:
            $ref: "#/definitions/Menu"
        "400":
          description: "id no valido"
        "404":
          description: "producto no encontrado"
      x-swagger-router-controller: "Menu"
    put:
      tags:
      - "Menu"
      summary: "Modificar o Actualizar un producto por medio de formulario"
      description: "Modificar informacion del producto"
      operationId: "updateProductWithForm"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "Introduce el ID del producto a actualizar"
        required: true
        type: "integer"
        format: "int64"
      - name: "Nombre"
        in: "formData"
        description: "Modificar nombre del producto"
        required: false
        type: "string"
      - name: "Descripcion"
        in: "formData"
        description: "Modificar descripcion del producto"
        required: false
        type: "string"
      - name: "Disponibilidad"
        in: "formData"
        description: "Modificar disponibilidad del producto"
        required: false
        type: "string"
      - name: "Precio"
        in: "formData"
        description: "Modificar precio del producto"
        required: false
        type: "string"
      - name: "Imagen"
        in: "formData"
        description: "Modificar imagen del producto"
        required: false
        type: "file"
      security:
      - coffeeshop_auth:
        - "write:products"
        - "read:products"
      responses:
        "405":
          description: "Entrada no valida"
      x-swagger-router-controller: "Menu"
    delete:
      tags:
      - "Menu"
      summary: "Eliminar producto del menu"
      description: "Eliminar producto del menu por ID"
      operationId: "deleteProduct"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "productId"
        in: "path"
        description: "ID del producto a eliminar"
        required: true
        type: "integer"
        format: "int64"
      security:
      - coffeeshop_auth:
        - "write:products"
        - "read:products"
      responses:
        "400":
          description: "ID no valido"
        "404":
          description: "Producto no encontrado"
      x-swagger-router-controller: "Menu"
  /pedido:
    post:
      tags:
      - "Caja"
      description: "Hacer pedido"
      operationId: "pedidoPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "pedido"
        description: "Agregar pedido"
        required: false
        schema:
          properties:
            menus:
              type: "array"
              items:
                $ref: "#/definitions/Menu"
      responses:
        "201":
          description: "pedido created"
          schema:
            $ref: "#/definitions/Pedido"
        "400":
          description: "entrada no valida"
        "409":
          description: "ya existe el pedido"
      x-swagger-router-controller: "Caja"
  /pedido/{pedidoId}:
    get:
      tags:
      - "Caja"
      description: "Obetener pedido por ID"
      operationId: "pedidoPedidoIdGET"
      produces:
      - "application/json"
      parameters:
      - name: "pedidoId"
        in: "path"
        description: "pedido id"
        required: true
        type: "string"
      responses:
        "200":
          description: "ver pedido"
          schema:
            $ref: "#/definitions/Pedido"
        "400":
          description: "id incorrecto"
        "404":
          description: "pedido no encontrado"
      x-swagger-router-controller: "Caja"
    put:
      tags:
      - "Caja"
      description: "Actualizar pedido"
      operationId: "pedidoPedidoIdPUT"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pedidoId"
        in: "path"
        description: "cambiar o actualizar pedido por id"
        required: true
        type: "string"
      - in: "body"
        name: "pedido"
        description: "pedido a actualizar"
        required: false
        schema:
          properties:
            drinks:
              type: "array"
              items:
                $ref: "#/definitions/Menu"
      responses:
        "200":
          description: "Pedido actualizado"
          schema:
            $ref: "#/definitions/Pedido"
        "404":
          description: "Not Found"
        "405":
          description: "Method Not Allowed"
      x-swagger-router-controller: "Caja"
    delete:
      tags:
      - "Caja"
      description: "Cancelar pedido"
      operationId: "pedidoPedidoIdDELETE"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pedidoId"
        in: "path"
        description: "pedido id"
        required: true
        type: "string"
      responses:
        "200":
          description: "pedido cancelado"
          schema:
            $ref: "#/definitions/PedidoCancelado"
        "404":
          description: "no encontrado"
      x-swagger-router-controller: "Caja"
  /pedido/pago/{pedidoId}:
    post:
      tags:
      - "Caja"
      description: "Pagar pedido"
      operationId: "pedidoPagoPedidoIdPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pedidoId"
        in: "path"
        description: "pedido id"
        required: true
        type: "string"
      - in: "body"
        name: "pago"
        description: "pagar pedido"
        required: false
        schema:
          $ref: "#/definitions/Pago"
      responses:
        "200":
          description: "Pedido pagado"
          schema:
            $ref: "#/definitions/PedidoPagado"
        "400":
          description: "entrada no valida"
        "409":
          description: "pago duplicado"
      x-swagger-router-controller: "Caja"
  /pedido/detalle/{pedidoId}:
    get:
      tags:
      - "Barista"
      description: "detalle de pedido pagado."
      operationId: "pedidoDetallePedidoIdGET"
      produces:
      - "application/json"
      parameters:
      - name: "pedidoId"
        in: "path"
        description: "ver detalle de pedido para producirlo"
        required: true
        type: "string"
      responses:
        "200":
          description: "pedido encontrado"
          schema:
            $ref: "#/definitions/PedidoPagado"
        "400":
          description: "entrada incorrecta"
        "404":
          description: "pedido no encontrado"
      x-swagger-router-controller: "Barista"
  /pedido/completado/{pedidoId}:
    put:
      tags:
      - "Barista"
      description: "pedido completado"
      operationId: "pedidoCompletadoPedidoIdPUT"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pedidoId"
        in: "path"
        description: "pedido id"
        required: true
        type: "string"
      responses:
        "200":
          description: "pedido completado"
          schema:
            $ref: "#/definitions/PedidoCompletado"
        "400":
          description: "entrada no valida"
        "404":
          description: "pedido no encontrado"
      x-swagger-router-controller: "Barista"
securityDefinitions:
  coffeeshop_auth:
    type: "oauth2"
    authorizationUrl: "http://coffeeshop.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:products: "modify products in your account"
      read:products: "read your products"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Menu:
    type: "object"
    required:
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      nombre:
        type: "string"
      categoria:
        type: "string"
        enum:
        - "Cafes"
        - "Bebidas"
        - "Panaderia"
      precio:
        type: "number"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      disponibilidad:
        type: "string"
        description: "Disponibilidad de productos"
        enum:
        - "disponible"
        - "agotado"
    example:
      precio: 6.02745618307040320615897144307382404804229736328125
      disponibilidad: "disponible"
      photoUrls:
      - "photoUrls"
      - "photoUrls"
      categoria: "Cafes"
      id: 0
      nombre: "nombre"
  PedidoBase:
    type: "object"
    properties:
      id:
        type: "string"
      productos:
        type: "array"
        items:
          $ref: "#/definitions/Menu"
      costoTotal:
        type: "number"
        description: "Costo total del pedido"
      estado:
        type: "string"
        enum:
        - "Creado"
        - "Pagado"
        - "Cancelado"
        - "Completo"
      fecha:
        type: "string"
    description: "propiedades base de pedido."
    example:
      fecha: "fecha"
      estado: "Creado"
      costoTotal: 0.80082819046101150206595775671303272247314453125
      id: "id"
      productos:
      - precio: 6.02745618307040320615897144307382404804229736328125
        disponibilidad: "disponible"
        photoUrls:
        - "photoUrls"
        - "photoUrls"
        categoria: "Cafes"
        id: 0
        nombre: "nombre"
      - precio: 6.02745618307040320615897144307382404804229736328125
        disponibilidad: "disponible"
        photoUrls:
        - "photoUrls"
        - "photoUrls"
        categoria: "Cafes"
        id: 0
        nombre: "nombre"
  Pedido:
    type: "object"
    properties:
      pedidoBase:
        $ref: "#/definitions/PedidoBase"
      links:
        type: "array"
        items:
          type: "object"
          properties:
            href:
              type: "string"
              enum:
              - "/pedido/{pedidoId}"
              - "/pedido/pago/{pedidoId}"
            rel:
              type: "string"
              enum:
              - "Ver"
              - "Actualizar"
              - "Cancelar"
              - "Pagar"
    description: "Pedido realizado."
    example:
      pedidoBase:
        fecha: "fecha"
        estado: "Creado"
        costoTotal: 0.80082819046101150206595775671303272247314453125
        id: "id"
        productos:
        - precio: 6.02745618307040320615897144307382404804229736328125
          disponibilidad: "disponible"
          photoUrls:
          - "photoUrls"
          - "photoUrls"
          categoria: "Cafes"
          id: 0
          nombre: "nombre"
        - precio: 6.02745618307040320615897144307382404804229736328125
          disponibilidad: "disponible"
          photoUrls:
          - "photoUrls"
          - "photoUrls"
          categoria: "Cafes"
          id: 0
          nombre: "nombre"
      links:
      - "{}"
      - "{}"
  PedidoCancelado:
    type: "object"
    properties:
      pedidoBase:
        $ref: "#/definitions/PedidoBase"
      links:
        type: "array"
        items:
          type: "object"
          properties:
            href:
              type: "string"
              enum:
              - "/pedido/{pedidoId}"
            rel:
              type: "string"
              enum:
              - "Ver"
    description: "Pedido cancelado."
    example:
      pedidoBase:
        fecha: "fecha"
        estado: "Creado"
        costoTotal: 0.80082819046101150206595775671303272247314453125
        id: "id"
        productos:
        - precio: 6.02745618307040320615897144307382404804229736328125
          disponibilidad: "disponible"
          photoUrls:
          - "photoUrls"
          - "photoUrls"
          categoria: "Cafes"
          id: 0
          nombre: "nombre"
        - precio: 6.02745618307040320615897144307382404804229736328125
          disponibilidad: "disponible"
          photoUrls:
          - "photoUrls"
          - "photoUrls"
          categoria: "Cafes"
          id: 0
          nombre: "nombre"
      links:
      - "{}"
      - "{}"
  PedidoPagado:
    type: "object"
    properties:
      pedidoBase:
        $ref: "#/definitions/PedidoBase"
      pago:
        $ref: "#/definitions/Pago"
      links:
        type: "array"
        items:
          type: "object"
          properties:
            href:
              type: "string"
              enum:
              - "/pedido/detalle/{pedidoId}"
              - "/pedido/detallePago/{pedidoId}"
              - "/pedido/detalleMenu/{pedidoId}"
              - "/pedido/completado/{pedidoId}"
            rel:
              type: "string"
              enum:
              - "Detalle"
              - "DetallePago"
              - "DetalleMenu"
              - "Completado"
    description: "Pedido Pagado"
    example:
      pedidoBase:
        fecha: "fecha"
        estado: "Creado"
        costoTotal: 0.80082819046101150206595775671303272247314453125
        id: "id"
        productos:
        - precio: 6.02745618307040320615897144307382404804229736328125
          disponibilidad: "disponible"
          photoUrls:
          - "photoUrls"
          - "photoUrls"
          categoria: "Cafes"
          id: 0
          nombre: "nombre"
        - precio: 6.02745618307040320615897144307382404804229736328125
          disponibilidad: "disponible"
          photoUrls:
          - "photoUrls"
          - "photoUrls"
          categoria: "Cafes"
          id: 0
          nombre: "nombre"
      links:
      - "{}"
      - "{}"
      pago:
        nomCliente: "Lucy"
        cardNum: "000000"
        expires: "07/07/2027"
        costo: 25
  PedidoCompletado:
    type: "object"
    properties:
      pedidoBase:
        $ref: "#/definitions/PedidoBase"
      pago:
        $ref: "#/definitions/Pago"
      links:
        type: "array"
        items:
          type: "object"
          properties:
            href:
              type: "string"
              enum:
              - "/pedido/detalle/{pedidoId}"
              - "/pedido/detallePago/{pedidoId}"
              - "/pedido/detalleMenu/{pedidoId}"
            rel:
              type: "string"
              enum:
              - "Detalles"
              - "DetallePago"
              - "MenuDetalle"
    description: "pedido completado."
    example:
      pedidoBase:
        fecha: "fecha"
        estado: "Creado"
        costoTotal: 0.80082819046101150206595775671303272247314453125
        id: "id"
        productos:
        - precio: 6.02745618307040320615897144307382404804229736328125
          disponibilidad: "disponible"
          photoUrls:
          - "photoUrls"
          - "photoUrls"
          categoria: "Cafes"
          id: 0
          nombre: "nombre"
        - precio: 6.02745618307040320615897144307382404804229736328125
          disponibilidad: "disponible"
          photoUrls:
          - "photoUrls"
          - "photoUrls"
          categoria: "Cafes"
          id: 0
          nombre: "nombre"
      links:
      - "{}"
      - "{}"
      pago:
        nomCliente: "Lucy"
        cardNum: "000000"
        expires: "07/07/2027"
        costo: 25
  Pago:
    type: "object"
    required:
    - "cardNum"
    - "nomCliente"
    properties:
      nomCliente:
        type: "string"
        example: "Lucy"
      cardNum:
        type: "string"
        example: "000000"
      expires:
        type: "string"
        example: "07/07/2027"
      costo:
        type: "number"
        example: 25
    description: "pago por un pedido"
    example:
      nomCliente: "Lucy"
      cardNum: "000000"
      expires: "07/07/2027"
      costo: 25
